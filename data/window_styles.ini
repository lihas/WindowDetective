//
//  window_styles.ini
//
// This file maps each window style id to it's name as used in the Windows API.
// Styles are grouped by the window classes they are used for, these classes
// are the built-in Windows controls.
// There is also additional information such as what other styles each one either
// must or must not be used with.

// -- File Format --
// Each style is defined by a comma separated list as follows:
//   id, name, isExtended, depends, excludes, description
// Group names are a comma-separated list of class names which
// the styles apply to, or "all" if they are generic styles.
// Note: The group names must not contain any spaces
// --

// TODO: depends and excludes fields need work

// General window styles
[all]
0x00000000, "WS_OVERLAPPED",           false, 0, 0xC0000000,  "Window is overlapped. An overlapped window has a title bar and a border."
0x00010000, "WS_TABSTOP",              false, 0, 0,           "Specifies a control that can receive the keyboard focus when the user presses the TAB key. Pressing the TAB key changes the keyboard focus to the next control with the WS_TABSTOP style."
0x00010000, "WS_MAXIMIZEBOX",          false, 0x80CF0000, 0,  "Window has a maximize button."
0x00020000, "WS_MINIMIZEBOX",          false, 0x80CF0000, 0,  "Window has a minimize button."
0x00020000, "WS_GROUP",                false, 0, 0,           "Specifies the first control of a group of controls. The group consists of this first control and all controls defined after it, up to the next control with the WS_GROUP style. The first control in each group usually has the WS_TABSTOP style so that the user can move from group to group. The user can subsequently change the keyboard focus from one control in the group to the next control in the group by using the direction keys."
0x00040000, "WS_THICKFRAME",           false, 0, 0,           "Window has a sizing border."
0x00080000, "WS_SYSMENU",              false, 0, 0,           "Window has a window menu on its title bar."
0x00100000, "WS_HSCROLL",              false, 0, 0,           "Window has a horizontal scroll bar."
0x00200000, "WS_VSCROLL",              false, 0, 0,           "Window has a vertical scroll bar."
0x00400000, "WS_DLGFRAME",             false, 0, 0,           "Window has a border of a style typically used with dialog boxes. A window with this style cannot have a title bar."
0x00800000, "WS_BORDER",               false, 0, 0,           "Window has a thin-line border."
0x00C00000, "WS_CAPTION",              false, 0, 0,           "Window has a title bar (includes the WS_BORDER style)."
0x00CF0000, "WS_OVERLAPPEDWINDOW",     false, 0, 0xC0000000,  "Window is overlapped with the WS_OVERLAPPED, WS_CAPTION, WS_SYSMENU, WS_THICKFRAME, WS_MINIMIZEBOX, and WS_MAXIMIZEBOX styles."
0x01000000, "WS_MAXIMIZE",             false, 0, 0,           "Window is maximized."
0x02000000, "WS_CLIPCHILDREN",         false, 0, 0,           "Excludes the area occupied by child windows when drawing occurs within the parent window. This style is used when creating the parent window."
0x04000000, "WS_CLIPSIBLINGS",         false, 0, 0,           "Clips child windows relative to each other; that is, when a particular child window receives a WM_PAINT message, the WS_CLIPSIBLINGS style clips all other overlapping child windows out of the region of the child window to be updated. If WS_CLIPSIBLINGS is not specified and child windows overlap, it is possible, when drawing within the client area of a child window, to draw within the client area of a neighboring child window."
0x08000000, "WS_DISABLED",             false, 0, 0,           "Window is initially disabled. A disabled window cannot receive input from the user."
0x10000000, "WS_VISIBLE",              false, 0, 0,           "Window is visible."
0x20000000, "WS_MINIMIZE",             false, 0, 0,           "Window is minimized."
0x40000000, "WS_CHILD",                false, 0, 0x80000000,  "Child window. A window with this style cannot have a menu bar."
0x80000000, "WS_POPUP",                false, 0, 0x40000000,  "Window is a pop-up window."
0x80880000, "WS_POPUPWINDOW",          false, 0, 0,           "Window is a pop-up window with WS_BORDER, WS_POPUP, and WS_SYSMENU styles. The WS_CAPTION and WS_POPUPWINDOW styles must be combined to make the window menu visible."

// Extended window styles
0x00000000, "WS_EX_LEFT",              true,  0, 0x00001000,  "Gives window generic left-aligned properties. This is the default."
0x00000000, "WS_EX_LTRREADING",        true,  0, 0x00002000,  "Displays the window text using left-to-right reading order properties. This is the default."
0x00000000, "WS_EX_RIGHTSCROLLBAR",    true,  0, 0x00004000,  "Places a vertical scroll bar (if present) to the right of the client area. This is the default."
0x00000001, "WS_EX_DLGMODALFRAME",     true,  0, 0,           "Designates a window with a double border that may (optionally) be created with a title bar when you specify the WS_CAPTION style flag in the dwStyle parameter."
0x00000004, "WS_EX_NOPARENTNOTIFY",    true,  0, 0,           "Specifies that a child window created with this style will not send the WM_PARENTNOTIFY message to its parent window when the child window is created or destroyed."
0x00000008, "WS_EX_TOPMOST",           true,  0, 0,           "Specifies that the window should be placed above all nontopmost windows and stay above them even when the window is deactivated."
0x00000010, "WS_EX_ACCEPTFILES",       true,  0, 0,           "Specifies that the window accepts drag-and-drop files."
0x00000020, "WS_EX_TRANSPARENT",       true,  0, 0,           "Specifies that the window is transparent. That is, any windows that are beneath the window are not obscured by the window. A window created with this style receives WM_PAINT messages only after all sibling windows beneath it have been updated."
0x00000040, "WS_EX_MDICHILD",          true,  0, 0,           "Window is an MDI child window."
0x00000080, "WS_EX_TOOLWINDOW",        true,  0, 0,           "Window is a tool window, which is intended to be used as a floating toolbar. A tool window has a title bar that is shorter than a normal title bar, and the window title is drawn using a smaller font. A tool window does not appear in the task bar or in the window that appears when the user presses ALT+TAB."
0x00000100, "WS_EX_WINDOWEDGE",        true,  0, 0,           "Specifies that the window has a border with a raised edge."
0x00000200, "WS_EX_CLIENTEDGE",        true,  0, 0,           "Specifies that a window has a 3D look - that is, a border with a sunken edge."
0x00000400, "WS_EX_CONTEXTHELP",       true,  0, 0,           "Includes a question mark in the title bar of the window. When the user clicks the question mark, the cursor changes to a question mark with a pointer. If the user then clicks a child window, the child receives a WM_HELP message."
0x00001000, "WS_EX_RIGHT",             true,  0, 0,           "Gives a window generic right-aligned properties. This depends on the window class."
0x00002000, "WS_EX_RTLREADING",        true,  0, 0,           "Displays the window text using right-to-left reading order properties."
0x00004000, "WS_EX_LEFTSCROLLBAR",     true,  0, 0,           "Places a vertical scroll bar to the left of the client area."
0x00010000, "WS_EX_CONTROLPARENT",     true,  0, 0,           "Allows the user to navigate among the child windows of the window by using the TAB key."
0x00020000, "WS_EX_STATICEDGE",        true,  0, 0,           "Window has a three-dimensional border style intended to be used for items that do not accept user input."
0x00040000, "WS_EX_APPWINDOW",         true,  0, 0,           "Forces a top-level window onto the taskbar when the window is visible."
0x00000300, "WS_EX_OVERLAPPEDWINDOW",  true,  0, 0,           "Combines the WS_EX_CLIENTEDGE and WS_EX_WINDOWEDGE styles"
0x00000188, "WS_EX_PALETTEWINDOW",     true,  0, 0,           "Combines the WS_EX_WINDOWEDGE and WS_EX_TOPMOST styles."


// Dialog box styles
[#32770]
0x00000001, "DS_ABSALIGN",             false, 0, 0,           "Indicates that the coordinates of the dialog box are screen coordinates. If this style is not specified, the coordinates are client coordinates."
0x00000002, "DS_SYSMODAL",             false, 0, 0,           "This style is obsolete and is included for compatibility with 16-bit versions of Windows. If you specify this style, the system creates the dialog box with the WS_EX_TOPMOST style. This style does not prevent the user from accessing other windows on the desktop.\nDo not combine this style with the DS_CONTROL style."
0x00000004, "DS_3DLOOK",               false, 0, 0,           "Gives the dialog box a nonbold font, and draws three-dimensional borders around control windows in the dialog box.\nThe DS_3DLOOK style is required only by applications compiled for Windows NT 3.51. The system automatically applies the three-dimensional look to dialog boxes created by applications compiled for Windows 95/98/Me and later versions of Windows NT."
0x00000008, "DS_FIXEDSYS",             false, 0, 0,           "Causes the dialog box to use the SYSTEM_FIXED_FONT instead of the default SYSTEM_FONT. This is a monospace font compatible with the System font in 16-bit versions of Windows earlier than 3.0."
0x00000010, "DS_NOFAILCREATE",         false, 0, 0,           "Dialog box is created even if errors occur — for example, if a child window cannot be created or if the system cannot create a special data segment for an edit control."
0x00000020, "DS_LOCALEDIT",            false, 0, 0,           "Applies to 16-bit applications only. This style directs edit controls in the dialog box to allocate memory from the application's data segment. Otherwise, edit controls allocate storage from a global memory object."
0x00000040, "DS_SETFONT",              false, 0, 0,           "Indicates that the header of the dialog box template (either standard or extended) contains additional data specifying the font to use for text in the client area and controls of the dialog box. If possible, the system selects a font according to the specified font data. The system passes a handle to the font to the dialog box and to each control by sending them the WM_SETFONT message. For descriptions of the format of this font data, see DLGTEMPLATE and DLGTEMPLATEEX.\nIf neither DS_SETFONT nor DS_SHELLFONT is specified, the dialog box template does not include the font data."
0x00000080, "DS_MODALFRAME",           false, 0, 0,           "Dialog box has a modal frame."
0x00000100, "DS_NOIDLEMSG",            false, 0, 0,           "Suppresses WM_ENTERIDLE messages that the system would otherwise send to the owner of the dialog box while the dialog box is displayed."
0x00000200, "DS_SETFOREGROUND",        false, 0, 0,           "Causes the system to use the SetForegroundWindow function to bring the dialog box to the foreground. This style is useful for modal dialog boxes that require immediate attention from the user regardless of whether the owner window is the foreground window.\nWindows 98/Me, Windows 2000/XP: The system restricts which processes can set the foreground window."
0x00000400, "DS_CONTROL",              false, 0, 0,           "Dialog box is meant to be a child window of another dialog box, much like a page in a property sheet. This style allows the user to tab among the control windows of a child dialog box, use its accelerator keys, and so on."
0x00000800, "DS_CENTER",               false, 0, 0,           "Centers the dialog box in the working area of the monitor that contains the owner window. If no owner window is specified, the dialog box is centered in the working area of a monitor determined by the system. The working area is the area not obscured by the taskbar or any appbars."
0x00001000, "DS_CENTERMOUSE",          false, 0, 0,           "Centers the dialog box on the mouse cursor."
0x00002000, "DS_CONTEXTHELP",          false, 0, 0,           "Includes a question mark in the title bar of the dialog box. When the user clicks the question mark, the cursor changes to a question mark with a pointer. If the user then clicks a control in the dialog box, the control receives a WM_HELP message. The control should pass the message to the dialog box procedure, which should call the function using the HELP_WM_HELP command. The help application displays a pop-up window that typically contains help for the control.\nNote that DS_CONTEXTHELP is only a placeholder. When the dialog box is created, the system checks for DS_CONTEXTHELP and, if it is there, adds WS_EX_CONTEXTHELP to the extended style of the dialog box. WS_EX_CONTEXTHELP cannot be used with the WS_MAXIMIZEBOX or WS_MINIMIZEBOX styles."


// Static (label) control styles
[Static]
0x00000000, "SS_LEFT",                 false, 0, 0x00000003,  "Specifies a simple rectangle and left-aligns the text in the rectangle. The text is formatted before it is displayed. Words that extend past the end of a line are automatically wrapped to the beginning of the next left-aligned line. Words that are longer than the width of the control are truncated."
0x00000001, "SS_CENTER",               false, 0, 0,           "Specifies a simple rectangle and centers the text in the rectangle. The text is formatted before it is displayed. Words that extend past the end of a line are automatically wrapped to the beginning of the next centered line. Words that are longer than the width of the control are truncated."
0x00000002, "SS_RIGHT",                false, 0, 0,           "Specifies a simple rectangle and right-aligns the text in the rectangle. The text is formatted before it is displayed. Words that extend past the end of a line are automatically wrapped to the beginning of the next right-aligned line. Words that are longer than the width of the control are truncated."
0x00000003, "SS_ICON",                 false, 0, 0,           "Specifies an icon to be displayed in the dialog box. If the control is created as part of a dialog box, the text is the name of an icon (not a filename) defined elsewhere in the resource file. If the control is created via CreateWindow or a related function, the text is the name of an icon (not a filename) defined in the resource file associated with the module specified by the hInstance parameter to CreateWindow.\n\nThe icon can be an animated cursor.\n\nIf an icon cannot be loaded through LoadIcon, an attempt is made to load the specified resource as a cursor using LoadCursor. If that too fails, an attempt is made to load from the device driver using LoadImage."
0x00000004, "SS_BLACKRECT",            false, 0, 0,           "Specifies a rectangle filled with the current window frame color. This color is black in the default color scheme."
0x00000005, "SS_GRAYRECT",             false, 0, 0,           "Specifies a rectangle filled with the current screen background color. This color is gray in the default color scheme."
0x00000006, "SS_WHITERECT",            false, 0, 0,           "Specifies a rectangle filled with the current window background color. This color is white in the default color scheme."
0x00000007, "SS_BLACKFRAME",           false, 0, 0,           "Specifies a box with a frame drawn in the same color as the window frames. This color is black in the default color scheme."
0x00000008, "SS_GRAYFRAME",            false, 0, 0,           "Specifies a box with a frame drawn with the same color as the screen background (desktop). This color is gray in the default color scheme."
0x00000009, "SS_WHITEFRAME",           false, 0, 0,           "Specifies a box with a frame drawn with the same color as the window background. This color is white in the default color scheme."
0x0000000A, "SS_USERITEM",             false, 0, 0,           "Specifies a user-defined item."
0x0000000B, "SS_SIMPLE",               false, 0, 0,           "Specifies a simple rectangle and displays a single line of left-aligned text in the rectangle. The text line cannot be shortened or altered in any way. Also, if the control is disabled, the control does not gray its text."
0x0000000C, "SS_LEFTNOWORDWRAP",       false, 0, 0,           "Specifies a simple rectangle and left-aligns the text in the rectangle. Tabs are expanded, but words are not wrapped. Text that extends past the end of a line is clipped."
0x0000000D, "SS_OWNERDRAW",            false, 0, 0,           "Specifies that the owner of the static control is responsible for drawing the control. The owner window receives a WM_DRAWITEM message whenever the control needs to be drawn."
0x0000000E, "SS_BITMAP",               false, 0, 0,           "Specifies that a bitmap is to be displayed in the static control. The text is the name of a bitmap (not a filename) defined elsewhere in the resource file. The style ignores the nWidth and nHeight parameters; the control automatically sizes itself to accommodate the bitmap."
0x0000000F, "SS_ENHMETAFILE",          false, 0, 0,           "Specifies that an enhanced metafile is to be displayed in the static control. The text is the name of a metafile. An enhanced metafile static control has a fixed size; the metafile is scaled to fit the static control's client area."
0x00000010, "SS_ETCHEDHORZ",           false, 0, 0,           "Draws the top and bottom edges of the static control using the EDGE_ETCHED edge style."
0x00000011, "SS_ETCHEDVERT",           false, 0, 0,           "Draws the left and right edges of the static control using the EDGE_ETCHED edge style."
0x00000012, "SS_ETCHEDFRAME",          false, 0, 0,           "Draws the frame of the static control using the EDGE_ETCHED edge style."
0x00000040, "SS_REALSIZECONTROL",      false, 0, 0,           "Windows XP or later: Adjusts the bitmap to fit the size of the static control. For example, changing the locale can change the system font, and thus controls might be resized. If a static control had a bitmap, the bitmap would no longer fit the control. This style bit dictates automatic redimensioning of bitmaps to fit their controls.\n\nIf SS_CENTERIMAGE is specified, the bitmap or icon is centered (and clipped if needed). If SS_CENTERIMAGE is not specified, the bitmap or icon is stretched or shrunk.\n\nNote that the redimensioning in the two axes are independent, and the result may have a changed aspect ratio.\n\nCompare with SS_REALSIZEIMAGE."
0x00000080, "SS_NOPREFIX",             false, 0, 0,           "Prevents interpretation of any ampersand (&) characters in the control's text as accelerator prefix characters. These are displayed with the ampersand removed and the next character in the string underlined. This static control style may be included with any of the defined static controls. You can combine SS_NOPREFIX with other styles. This can be useful when filenames or other strings that may contain an ampersand (&) must be displayed in a static control in a dialog box."
0x00000100, "SS_NOTIFY",               false, 0, 0,           "Sends the parent window STN_CLICKED, STN_DBLCLK, STN_DISABLE, and STN_ENABLE notification codes when the user clicks or double-clicks the control."
0x00000200, "SS_CENTERIMAGE",          false, 0, 0,           "Specifies that a bitmap is centered in the static control that contains it. The control is not resized, so that a bitmap too large for the control will be clipped. If the static control contains a single line of text, the text is centered vertically in the client area of the control.\n\nWindows XP: This style bit no longer results in unused portions of the control being filled with the color of the top left pixel of the bitmap or icon. Unused portions of the control will remain the background color."
0x00000400, "SS_RIGHTJUST",            false, 0, 0,           "Specifies that the lower right corner of a static control with the SS_BITMAP or SS_ICON style is to remain fixed when the control is resized. Only the top and left sides are adjusted to accommodate a new bitmap or icon."
0x00000800, "SS_REALSIZEIMAGE",        false, 0, 0,           "Specifies that the actual resource width is used and the icon is loaded using LoadImage. SS_REALSIZEIMAGE is always used in conjunction with SS_ICON.\n\nSS_REALSIZEIMAGE uses LoadImage, overriding the process normally followed under SS_ICON. It does not load cursors; if LoadImage fails, no further attempts to load are made. It uses the actual resource width. The static control is resized accordingly, but the icon remains aligned to the originally specified left and top edges of the control.\n\nNote that if SS_CENTERIMAGE is also specified, the icon is centered within the control's space, which was specified using the CreateWindow parameters nWidth and nHeight.\n\nCompare with SS_REALSIZECONTROL."
0x00001000, "SS_SUNKEN",               false, 0, 0,           "Draws a half-sunken border around a static control."
0x00002000, "SS_EDITCONTROL",          false, 0, 0,           "Windows 2000: Specifies that the static control duplicates the text-displaying characteristics of a multiline edit control. Specifically, the average character width is calculated in the same manner as with an edit control, and the function does not display a partially visible last line."
0x00004000, "SS_ENDELLIPSIS",          false, 0, 0,           "Microsoft Windows NT or later: If the end of a string does not fit in the rectangle, it is truncated and ellipses are added. If a word that is not at the end of the string goes beyond the limits of the rectangle, it is truncated without ellipses. Using this style will force the control’s text to be on one line with no word wrap. Compare with SS_PATHELLIPSIS and SS_WORDELLIPSIS."
0x00008000, "SS_PATHELLIPSIS",         false, 0, 0,           "Microsoft Windows NT or later: Replaces characters in the middle of the string with ellipses so that the result fits in the specified rectangle. If the string contains backslash (\) characters, SS_PATHELLIPSIS preserves as much as possible of the text after the last backslash. Using this style will force the control’s text to be on one line with no word wrap. Compare with SS_ENDELLIPSIS and SS_WORDELLIPSIS."
0x0000C000, "SS_WORDELLIPSIS",         false, 0, 0,           "Microsoft Windows NT or later: Truncates any word that does not fit in the rectangle and adds ellipses. Using this style will force the control’s text to be on one line with no word wrap.\n\nCompare with SS_ENDELLIPSIS and SS_PATHELLIPSIS."


// Button styles
[Button]
0x00000000, "BS_PUSHBUTTON",           false, 0, 0x0000000F,  "Push button that posts a WM_COMMAND message to the owner window when the user selects the button."
0x00000000, "BS_TEXT",                 false, 0, 0x000000CF,  "Specifies that the button displays text."
0x00000001, "BS_DEFPUSHBUTTON",        false, 0, 0,           "Push button that behaves like a BS_PUSHBUTTON style button, but has a distinct appearance. If the button is in a dialog box, the user can select the button by pressing the ENTER key, even when the button does not have the input focus. This style is useful for enabling the user to quickly select the most likely (default) option."
0x00000002, "BS_CHECKBOX",             false, 0, 0,           "Button is a small, empty check box with text. By default, the text is displayed to the right of the check box. To display the text to the left of the check box, combine this flag with the BS_LEFTTEXT style (or with the equivalent BS_RIGHTBUTTON style)."
0x00000003, "BS_AUTOCHECKBOX",         false, 0, 0,           "Button is the same as a check box, except that the check state automatically toggles between checked and cleared each time the user selects the check box."
0x00000004, "BS_RADIOBUTTON",          false, 0, 0,           "A small circle with text. By default, the text is displayed to the right of the circle. To display the text to the left of the circle, combine this flag with the BS_LEFTTEXT style (or with the equivalent BS_RIGHTBUTTON style). Use radio buttons for groups of related, but mutually exclusive choices."
0x00000005, "BS_3STATE",               false, 0, 0,           "Button is the same as a check box, except that the box can be grayed as well as checked or cleared. Use the grayed state to show that the state of the check box is not determined."
0x00000006, "BS_AUTO3STATE",           false, 0, 0,           "Button is the same as a three-state check box, except that the box changes its state when the user selects it. The state cycles through checked, indeterminate, and cleared."
0x00000007, "BS_GROUPBOX",             false, 0, 0,           "A rectangle in which other controls can be grouped. Any text associated with this style is displayed in the rectangle's upper left corner."
0x00000008, "BS_USERBUTTON",           false, 0, 0,           "Obsolete, but provided for compatibility with 16-bit versions of Windows. Applications should use BS_OWNERDRAW instead."
0x00000009, "BS_AUTORADIOBUTTON",      false, 0, 0,           "Button is the same as a radio button, except that when the user selects it, the system automatically sets the button's check state to checked and automatically sets the check state for all other buttons in the same group to cleared."
0x0000000B, "BS_OWNERDRAW",            false, 0, 0,           "An owner-drawn button. The owner window receives a WM_DRAWITEM message when a visual aspect of the button has changed. Do not combine the BS_OWNERDRAW style with any other button styles."
0x0000000C, "BS_SPLITBUTTON",          false, 0, 0,           "Windows Vista and Version 6.00.\nA split button with a drop down arrow."
0x0000000D, "BS_DEFSPLITBUTTON",       false, 0, 0,           "Windows Vista and Version 6.00.\nA split button that behaves like a BS_PUSHBUTTON style button, but also has a distinctive appearance. If the split button is in a dialog box, the user can select the split button by pressing the ENTER key, even when the split button does not have the input focus. This style is useful for enabling the user to quickly select the most likely (default) option."
0x0000000E, "BS_COMMANDLINK",          false, 0, 0,           "Windows Vista and Version 6.00.\nA command link button that behaves like a BS_PUSHBUTTON style button, but the command link button has a green arrow on the left pointing to the button text. A caption for the button text can be set by sending the BCM_SETNOTE message to the button."
0x0000000F, "BS_DEFCOMMANDLINK",       false, 0, 0,           "Windows Vista and Version 6.00.\nA command link button that behaves like a BS_PUSHBUTTON style button. If the button is in a dialog box, the user can select the command link button by pressing the ENTER key, even when the command link button does not have the input focus. This style is useful for enabling the user to quickly select the most likely (default) option."
0x00000020, "BS_LEFTTEXT",             false, 0, 0,           "Places text on the left side of the radio button or check box when combined with a radio button or check box style. Same as the BS_RIGHTBUTTON style."
0x00000040, "BS_ICON",                 false, 0, 0,           "Specifies that the button displays an icon."
0x00000080, "BS_BITMAP",               false, 0, 0,           "Specifies that the button displays a bitmap."
0x00000100, "BS_LEFT",                 false, 0, 0,           "Left-justifies the text in the button rectangle. However, if the button is a check box or radio button that does not have the BS_RIGHTBUTTON style, the text is left justified on the right side of the check box or radio button."
0x00000200, "BS_RIGHT",                false, 0, 0,           "Right-justifies text in the button rectangle. However, if the button is a check box or radio button that does not have the BS_RIGHTBUTTON style, the text is right justified on the right side of the check box or radio button."
0x00000300, "BS_CENTER",               false, 0, 0,           "Centers text horizontally in the button rectangle."
0x00000400, "BS_TOP",                  false, 0, 0,           "Places text at the top of the button rectangle."
0x00000800, "BS_BOTTOM",               false, 0, 0,           "Places text at the bottom of the button rectangle."
0x00000C00, "BS_VCENTER",              false, 0, 0,           "Places text in the middle (vertically) of the button rectangle."
0x00001000, "BS_PUSHLIKE",             false, 0, 0,           "Makes a button (such as a check box, three-state check box, or radio button) look and act like a push button. The button looks raised when it isn't pushed or checked, and sunken when it is pushed or checked."
0x00002000, "BS_MULTILINE",            false, 0, 0,           "Wraps the button text to multiple lines if the text string is too long to fit on a single line in the button rectangle."
0x00004000, "BS_NOTIFY",               false, 0, 0,           "Enables a button to send BN_KILLFOCUS and BN_SETFOCUS notification messages to its parent window.\n\nNote that buttons send the BN_CLICKED notification message regardless of whether it has this style. To get BN_DBLCLK notification messages, the button must have the BS_RADIOBUTTON or BS_OWNERDRAW style."
0x00008000, "BS_FLAT",                 false, 0, 0,           "Specifies that the button is two-dimensional; it does not use the default shading to create a 3-D image."


// Edit styles
[Edit]
0x00000000, "ES_LEFT",                 false, 0, 0x00000003,  "Aligns text with the left margin."
0x00000001, "ES_CENTER",               false, 0, 0,           "Windows 98/Me, Windows 2000/XP: Centers text in a single-line or multiline edit control.\nWindows 95, Windows NT 4.0 and earlier: Centers text in a multiline edit control."
0x00000002, "ES_RIGHT",                false, 0, 0,           "Windows 98/Me, Windows 2000/XP: Right-aligns text in a single-line or multiline edit control. Windows 95, Windows NT 4.0 and earlier: Right aligns text in a multiline edit control."
0x00000004, "ES_MULTILINE",            false, 0, 0,           "Designates a multiline edit control. The default is single-line edit control.\nWhen the multiline edit control is in a dialog box, the default response to pressing the ENTER key is to activate the default button. To use the ENTER key as a carriage return, use the ES_WANTRETURN style.\nWhen the multiline edit control is not in a dialog box and the ES_AUTOVSCROLL style is specified, the edit control shows as many lines as possible and scrolls vertically when the user presses the ENTER key. If you do not specify ES_AUTOVSCROLL, the edit control shows as many lines as possible and beeps if the user presses the ENTER key when no more lines can be displayed.\nIf you specify the ES_AUTOHSCROLL style, the multiline edit control automatically scrolls horizontally when the caret goes past the right edge of the control. To start a new line, the user must press the ENTER key. If you do not specify ES_AUTOHSCROLL, the control automatically wraps words to the beginning of the next line when necessary. A new line is also started if the user presses the ENTER key. The window size determines the position of the Wordwrap. If the window size changes, the Wordwrapping position changes and the text is redisplayed.\nMultiline edit controls can have scroll bars. An edit control with scroll bars processes its own scroll bar messages. Note that edit controls without scroll bars scroll as described in the previous paragraphs and process any scroll messages sent by the parent window."
0x00000008, "ES_UPPERCASE",            false, 0, 0,           "Converts all characters to uppercase as they are typed into the edit control."
0x00000010, "ES_LOWERCASE",            false, 0, 0,           "Converts all characters to lowercase as they are typed into the edit control."
0x00000020, "ES_PASSWORD",             false, 0, 0,           "Displays an asterisk (*) for each character typed into the edit control. This style is valid only for single-line edit controls.\nWindows XP: If the edit control is from user32.dll, the default password character is an asterisk. However, if the edit control is from comctl32.dll version 6, the default character is a black circle.\nTo change the characters that is displayed, or set or clear this style, use the EM_SETPASSWORDCHAR message."
0x00000040, "ES_AUTOVSCROLL",          false, 0, 0,           "Automatically scrolls text up one page when the user presses the ENTER key on the last line."
0x00000080, "ES_AUTOHSCROLL",          false, 0, 0,           "Automatically scrolls text to the right by 10 characters when the user types a character at the end of the line. When the user presses the ENTER key, the control scrolls all text back to position zero."
0x00000100, "ES_NOHIDESEL",            false, 0, 0,           "Negates the default behavior for an edit control. The default behavior hides the selection when the control loses the input focus and inverts the selection when the control receives the input focus. If you specify ES_NOHIDESEL, the selected text is inverted, even if the control does not have the focus."
0x00000400, "ES_OEMCONVERT",           false, 0, 0,           "Converts text entered in the edit control. The text is converted from the Windows character set to the OEM character set and then back to the Windows character set. This ensures proper character conversion when the application calls the CharToOem function to convert a Windows string in the edit control to OEM characters. This style is most useful for edit controls that contain file names that will be used on file systems that do not support Unicode."
0x00000800, "ES_READONLY",             false, 0, 0,           "Prevents the user from typing or editing text in the edit control.\nTo change this style after the control has been created, use the EM_SETREADONLY message."
0x00001000, "ES_WANTRETURN",           false, 0, 0,           "Specifies that a carriage return be inserted when the user presses the ENTER key while entering text into a multiline edit control in a dialog box. If you do not specify this style, pressing the ENTER key has the same effect as pressing the dialog box's default push button. This style has no effect on a single-line edit control."
0x00002000, "ES_NUMBER",               false, 0, 0,           "Allows only digits to be entered into the edit control. Note that, even with this set, it is still possible to paste non-digits into the edit control."


// Rich Edit styles
[RichEdit,RichEdit20A,RichEdit20W,RichEdit50A,RichEdit50W]
0x00000000, "ES_LEFT",                 false, 0, 0x00000003,  "Aligns text with the left margin."
0x00000001, "ES_CENTER",               false, 0, 0,           "Windows 98/Me, Windows 2000/XP: Centers text in a single-line or multiline edit control.\nWindows 95, Windows NT 4.0 and earlier: Centers text in a multiline edit control."
0x00000002, "ES_RIGHT",                false, 0, 0,           "Windows 98/Me, Windows 2000/XP: Right-aligns text in a single-line or multiline edit control. Windows 95, Windows NT 4.0 and earlier: Right aligns text in a multiline edit control."
0x00000004, "ES_MULTILINE",            false, 0, 0,           "Designates a multiline edit control. The default is single-line edit control.\nWhen the multiline edit control is in a dialog box, the default response to pressing the ENTER key is to activate the default button. To use the ENTER key as a carriage return, use the ES_WANTRETURN style.\nWhen the multiline edit control is not in a dialog box and the ES_AUTOVSCROLL style is specified, the edit control shows as many lines as possible and scrolls vertically when the user presses the ENTER key. If you do not specify ES_AUTOVSCROLL, the edit control shows as many lines as possible and beeps if the user presses the ENTER key when no more lines can be displayed.\nIf you specify the ES_AUTOHSCROLL style, the multiline edit control automatically scrolls horizontally when the caret goes past the right edge of the control. To start a new line, the user must press the ENTER key. If you do not specify ES_AUTOHSCROLL, the control automatically wraps words to the beginning of the next line when necessary. A new line is also started if the user presses the ENTER key. The window size determines the position of the Wordwrap. If the window size changes, the Wordwrapping position changes and the text is redisplayed.\nMultiline edit controls can have scroll bars. An edit control with scroll bars processes its own scroll bar messages. Note that edit controls without scroll bars scroll as described in the previous paragraphs and process any scroll messages sent by the parent window."
0x00000008, "ES_NOOLEDRAGDROP",        false, 0, 0,           ""
0x00000020, "ES_PASSWORD",             false, 0, 0,           "Displays an asterisk (*) for each character typed into the edit control. This style is valid only for single-line edit controls.\nWindows XP: If the edit control is from user32.dll, the default password character is an asterisk. However, if the edit control is from comctl32.dll version 6, the default character is a black circle.\nTo change the characters that is displayed, or set or clear this style, use the EM_SETPASSWORDCHAR message."
0x00000040, "ES_AUTOVSCROLL",          false, 0, 0,           "Automatically scrolls text up one page when the user presses the ENTER key on the last line."
0x00000080, "ES_AUTOHSCROLL",          false, 0, 0,           "Automatically scrolls text to the right by 10 characters when the user types a character at the end of the line. When the user presses the ENTER key, the control scrolls all text back to position zero."
0x00000100, "ES_NOHIDESEL",            false, 0, 0,           "Negates the default behavior for an edit control. The default behavior hides the selection when the control loses the input focus and inverts the selection when the control receives the input focus. If you specify ES_NOHIDESEL, the selected text is inverted, even if the control does not have the focus."
0x00000800, "ES_READONLY",             false, 0, 0,           "Prevents the user from typing or editing text in the edit control.\nTo change this style after the control has been created, use the EM_SETREADONLY message."
0x00001000, "ES_WANTRETURN",           false, 0, 0,           "Specifies that a carriage return be inserted when the user presses the ENTER key while entering text into a multiline edit control in a dialog box. If you do not specify this style, pressing the ENTER key has the same effect as pressing the dialog box's default push button. This style has no effect on a single-line edit control."
0x00002000, "ES_NUMBER",               false, 0, 0,           "Allows only digits to be entered into the edit control. Note that, even with this set, it is still possible to paste non-digits into the edit control."
0x00008000, "ES_SAVESEL",              false, 0, 0,           ""
0x00004000, "ES_SUNKEN",               false, 0, 0,           "Displays the control with a sunken border style so that the rich edit control appears recessed into its parent window."
0x00002000, "ES_DISABLENOSCROLL",      false, 0, 0,           "Disables scroll bars instead of hiding them when they are not needed."
0x00040000, "ES_SELFIME",              false, 0, 0,           "Directs the rich edit control to allow the application to handle all IME operations. This style is available for Asian language support only."
0x01000000, "ES_SELECTIONBAR",         false, 0, 0,           ""


// Combo box styles
[ComboBox,ComboBoxEx]
0x00000001, "CBS_SIMPLE",              false, 0, 0,           "Displays the list box at all times. The current selection in the list box is displayed in the edit control."
0x00000002, "CBS_DROPDOWN",            false, 0, 0,           "Similar to CBS_SIMPLE, except that the list box is not displayed unless the user selects an icon next to the edit control."
0x00000003, "CBS_DROPDOWNLIST",        false, 0, 0,           "Similar to CBS_DROPDOWN, except that the edit control is replaced by a static text item that displays the current selection in the list box."
0x00000010, "CBS_OWNERDRAWFIXED",      false, 0, 0,           "Specifies that the owner of the list box is responsible for drawing its contents and that the items in the list box are all the same height. The owner window receives a WM_MEASUREITEM message when the combo box is created and a WM_DRAWITEM message when a visual aspect of the combo box has changed."
0x00000020, "CBS_OWNERDRAWVARIABLE",   false, 0, 0,           "Specifies that the owner of the list box is responsible for drawing its contents and that the items in the list box are variable in height. The owner window receives a WM_MEASUREITEM message for each item in the combo box when you create the combo box and a WM_DRAWITEM message when a visual aspect of the combo box has changed."
0x00000040, "CBS_AUTOHSCROLL",         false, 0, 0,           "Automatically scrolls the text in an edit control to the right when the user types a character at the end of the line. If this style is not set, only text that fits within the rectangular boundary is allowed."
0x00000080, "CBS_OEMCONVERT",          false, 0, 0,           "Converts text entered in the combo box edit control from the Windows character set to the OEM character set and then back to the Windows character set. This ensures proper character conversion when the application calls the CharToOem function to convert a Windows string in the combo box to OEM characters. This style is most useful for combo boxes that contain file names and applies only to combo boxes created with the CBS_SIMPLE or CBS_DROPDOWN style."
0x00000100, "CBS_SORT",                false, 0, 0,           "Automatically sorts strings added to the list box."
0x00000200, "CBS_HASSTRINGS",          false, 0, 0,           "Specifies that an owner-drawn combo box contains items consisting of strings. The combo box maintains the memory and address for the strings so the application can use the CB_GETLBTEXT message to retrieve the text for a particular item."
0x00000400, "CBS_NOINTEGRALHEIGHT",    false, 0, 0,           "Specifies that the size of the combo box is exactly the size specified by the application when it created the combo box. Normally, the system sizes a combo box so that it does not display partial items."
0x00000800, "CBS_DISABLENOSCROLL",     false, 0, 0,           "Shows a disabled vertical scroll bar in the list box when the box does not contain enough items to scroll. Without this style, the scroll bar is hidden when the list box does not contain enough items."
0x00001000, "CBS_UPPERCASE",           false, 0, 0,           "Converts to uppercase all text in both the selection field and the list."
0x00002000, "CBS_LOWERCASE",           false, 0, 0,           "Converts to lowercase all text in both the selection field and the list."

// Combo box extended styles
[ComboBoxEx]
0x00000001, "CBES_EX_NOEDITIMAGE",       true,  0, 0,         "The edit box and the dropdown list will not display item images."
0x00000002, "CBES_EX_NOEDITIMAGEINDENT", true,  0, 0,         "The edit box and the dropdown list will not display item images."
0x00000004, "CBES_EX_PATHWORDBREAKPROC", true,  0, 0,         "Windows NT only. The edit box will use the slash (/), backslash (\), and period (.) characters as word delimiters. This makes keyboard shortcuts for word-by-word cursor movement effective in path names and URLs."
0x00000008, "CBES_EX_NOSIZELIMIT",       true,  0, 0,         "Allows the ComboBoxEx control to be vertically sized smaller than its contained combo box control. If the ComboBoxEx is sized smaller than the combo box, the combo box will be clipped."
0x00000010, "CBES_EX_CASESENSITIVE",     true,  0, 0,         "BSTR searches in the list will be case sensitive. This includes searches as a result of text being typed in the edit box and the CB_FINDSTRINGEXACT message."
0x00000020, "CBES_EX_TEXTENDELLIPSIS",   true,  0, 0,         "Windows Vista and later. Causes items in the drop-down list and the edit box (when the edit box is read only) to be truncated with an ellipsis ("...") rather than just clipped by the edge of the control. This is useful when the control needs to be set to a fixed width, yet the entries in the list may be long."


// Listbox styles
[ListBox,DragList]
0x00000001, "LBS_NOTIFY",              false, 0, 0,           "Causes the list box to send a notification code to the parent window whenever the user clicks a list box item (LBN_SELCHANGE), double-clicks an item (LBN_DBLCLK), or cancels the selection (LBN_SELCANCEL)."
0x00000002, "LBS_SORT",                false, 0, 0,           "Sorts strings in the list box alphabetically."
0x00000004, "LBS_NOREDRAW",            false, 0, 0,           "Specifies that the list box's appearance is not updated when changes are made."
0x00000008, "LBS_MULTIPLESEL",         false, 0, 0,           "Turns string selection on or off each time the user clicks or double-clicks a string in the list box. The user can select any number of strings."
0x00000010, "LBS_OWNERDRAWFIXED",,     false, 0, 0,           "Specifies that the owner of the list box is responsible for drawing its contents and that the items in the list box are the same height. The owner window receives a WM_MEASUREITEM message when the list box is created and a WM_DRAWITEM message when a visual aspect of the list box has changed."
0x00000020, "LBS_OWNERDRAWVARIABLE",   false, 0, 0,           "Specifies that the owner of the list box is responsible for drawing its contents and that the items in the list box are variable in height. The owner window receives a WM_MEASUREITEM message for each item in the box when the list box is created and a WM_DRAWITEM message when a visual aspect of the list box has changed.\n\nThis style causes the LBS_NOINTEGRALHEIGHT style to be enabled.\nThis style is ignored if the LBS_MULTICOLUMN style is specified."
0x00000040, "LBS_HASSTRINGS",          false, 0, 0,           "Specifies that a list box contains items consisting of strings. The list box maintains the memory and addresses for the strings so that the application can use the LB_GETTEXT message to retrieve the text for a particular item. By default, all list boxes except owner-drawn list boxes have this style. You can create an owner-drawn list box either with or without this style.\n\nFor owner-drawn list boxes without this style, the LB_GETTEXT message retrieves the value associated with an item (the item data)."
0x00000080, "LBS_USETABSTOPS",         false, 0, 0,           "Enables a list box to recognize and expand tab characters when drawing its strings. You can use the LB_SETTABSTOPS message to specify tab stop positions. The default tab positions are 32 dialog template units apart. Dialog template units are the device-independent units used in dialog box templates."
0x00000100, "LBS_NOINTEGRALHEIGHT",    false, 0, 0,           "Specifies that the size of the list box is exactly the size specified by the application when it created the list box. Normally, the system sizes a list box so that the list box does not display partial items.\n\nFor list boxes with the LBS_OWNERDRAWVARIABLE style, the LBS_NOINTEGRALHEIGHT style is always enforced."
0x00000200, "LBS_MULTICOLUMN",         false, 0, 0,           "Specifies a multi-column list box that is scrolled horizontally. The list box automatically calculates the width of the columns, or an application can set the width by using the LB_SETCOLUMNWIDTH message. If a list box has the LBS_OWNERDRAWFIXED style, an application can set the width when the list box sends the WM_MEASUREITEM message.\n\nA list box with the LBS_MULTICOLUMN style cannot scroll vertically—it ignores any WM_VSCROLL messages it receives.\n\nThe LBS_MULTICOLUMN and LBS_OWNERDRAWVARIABLE styles cannot be combined. If both are specified, LBS_OWNERDRAWVARIABLE is ignored."
0x00000400, "LBS_WANTKEYBOARDINPUT",   false, 0, 0,           "Specifies that the owner of the list box receives WM_VKEYTOITEM messages whenever the user presses a key and the list box has the input focus. This enables an application to perform special processing on the keyboard input."
0x00000800, "LBS_EXTENDEDSEL",         false, 0, 0,           "Allows multiple items to be selected by using the SHIFT key and the mouse or special key combinations."
0x00001000, "LBS_DISABLENOSCROLL",     false, 0, 0,           "Shows a disabled horizontal or vertical scroll bar when the list box does not contain enough items to scroll. If you do not specify this style, the scroll bar is hidden when the list box does not contain enough items. This style must be used with the WS_VSCROLL or WS_HSCROLL style."
0x00002000, "LBS_NODATA",              false, 0, 0,           "Specifies a no-data list box. Specify this style when the count of items in the list box will exceed one thousand. A no-data list box must also have the LBS_OWNERDRAWFIXED style, but must not have the LBS_SORT or LBS_HASSTRINGS style.\n\nA no-data list box resembles an owner-drawn list box except that it contains no string or bitmap data for an item. Commands to add, insert, or delete an item always ignore any specified item data; requests to find a string within the list box always fail. The system sends the WM_DRAWITEM message to the owner window when an item must be drawn. The itemID member of the DRAWITEMSTRUCT structure passed with the WM_DRAWITEM message specifies the line number of the item to be drawn. A no-data list box does not send a WM_DELETEITEM message."
0x00004000, "LBS_NOSEL",               false, 0, 0,           "Specifies that the list box contains items that can be viewed but not selected."
0x00008000, "LBS_COMBOBOX",            false, 0, 0,           "Notifies a list box that it is part of a combo box. This allows coordination between the two controls so that they present a unified UI. The combo box itself must set this style. If the style is set by anything but the combo box, the list box will regard itself incorrectly as a child of a combo box and a failure will result."


// ListView styles
[SysListView32]
0x00000000, "LVS_ICON",                false, 0, 0x00000003,     "This style specifies icon view."
0x00000000, "LVS_ALIGNTOP",            false, 0, 0,              "Items are aligned with the top of the list-view control in icon and small icon view."
0x00000001, "LVS_REPORT",              false, 0, 0,              "This style specifies report view. When using the LVS_REPORT style with a list-view control, the first column is always left-aligned. You cannot use LVCFMT_RIGHT to change this alignment."
0x00000002, "LVS_SMALLICON",           false, 0, 0,              "This style specifies small icon view."
0x00000003, "LVS_LIST",                false, 0, 0,              "This style specifies list view."
0x00000004, "LVS_SINGLESEL",           false, 0, 0,              "Only one item at a time can be selected. By default, multiple items may be selected."
0x00000008, "LVS_SHOWSELALWAYS",       false, 0, 0,              "The selection, if any, is always shown, even if the control does not have the focus."
0x00000010, "LVS_SORTASCENDING",       false, 0, 0,              "Item indexes are sorted based on item text in ascending order."
0x00000020, "LVS_SORTDESCENDING",      false, 0, 0,              "Item indexes are sorted based on item text in descending order."
0x00000040, "LVS_SHAREIMAGELISTS",     false, 0, 0,              "The image list will not be deleted when the control is destroyed. This style enables the use of the same image lists with multiple list-view controls."
0x00000080, "LVS_NOLABELWRAP",         false, 0, 0,              "Item text is displayed on a single line in icon view. By default, item text may wrap in icon view."
0x00000100, "LVS_AUTOARRANGE",         false, 0, 0,              "Icons are automatically kept arranged in icon and small icon view."
0x00000200, "LVS_EDITLABELS",          false, 0, 0,              "Item text can be edited in place. The parent window must process the LVN_ENDLABELEDIT notification code."
0x00001000, "LVS_OWNERDATA",           false, 0, 0,              "Version 4.70. This style specifies a virtual list-view control."
0x00002000, "LVS_NOSCROLL",            false, 0, 0,              "Scrolling is disabled. All items must be within the client area. This style is not compatible with the LVS_LIST or LVS_REPORT styles."
0x00000800, "LVS_ALIGNLEFT",           false, 0, 0,              "Items are left-aligned in icon and small icon view."
//0x00000c00, "LVS_ALIGNMASK",           false, 0, 0,              "The control's current alignment."
//0x0000fc00, "LVS_TYPESTYLEMASK",       false, 0, 0,              "Determines the window styles that control item alignment and header appearance and behavior."
0x00000400, "LVS_OWNERDRAWFIXED",      false, 0, 0,              "The owner window can paint items in report view. The list-view control sends a WM_DRAWITEM message to paint each item; it does not send separate messages for each subitem. The iItemData member of the DRAWITEMSTRUCT structure contains the item data for the specified list-view item."
0x00004000, "LVS_NOCOLUMNHEADER",      false, 0, 0,              "Column headers are not displayed in report view. By default, columns have headers in report view."
0x00008000, "LVS_NOSORTHEADER",        false, 0, 0,              "Column headers do not work like buttons. This style can be used if clicking a column header in report view does not carry out an action, such as sorting."

// ListView extended styles
0x00000001, "LVS_EX_GRIDLINES",        true,  0, 0,              "Displays gridlines around items and subitems. This style is available only in conjunction with the LVS_REPORT style."
0x00000002, "LVS_EX_SUBITEMIMAGES",    true,  0, 0,              "Allows images to be displayed for subitems. This style is available only in conjunction with the LVS_REPORT style."
0x00000004, "LVS_EX_CHECKBOXES",       true,  0, 0,              "Version 4.70. Enables check boxes for items in a list-view control. When set to this style, the control creates and sets a state image list with two images using DrawFrameControl. State image 1 is the unchecked box, and state image 2 is the checked box. Setting the state image to zero removes the check box.\n\nVersion 6.00 Check boxes are visible and functional with all list view modes except the tile view mode introduced in ComCtl32.dll version 6. Clicking a checkbox in tile view mode only selects the item; the state does not change.\n\nIf this style is set, the list-view control automatically toggles the check state when the user clicks the check box or presses the space bar."
0x00000008, "LVS_EX_TRACKSELECT",      true,  0, 0,              "Enables hot-track selection in a list-view control. Hot track selection means that an item is automatically selected when the cursor remains over the item for a certain period of time. The delay can be changed from the default system setting with a LVM_SETHOVERTIME message. This style applies to all styles of list-view control. You can check whether hot-track selection is enabled by calling SystemParametersInfo."
0x00000010, "LVS_EX_HEADERDRAGDROP",   true,  0, 0,              "Enables drag-and-drop reordering of columns in a list-view control. This style is only available to list-view controls that use the LVS_REPORT style."
0x00000020, "LVS_EX_FULLROWSELECT",    true,  0, 0,              "When an item is selected, the item and all its subitems are highlighted. This style is available only in conjunction with the LVS_REPORT style."
0x00000040, "LVS_EX_ONECLICKACTIVATE", true,  0, 0,              "The list-view control sends an LVN_ITEMACTIVATE notification code to the parent window when the user clicks an item. This style also enables hot tracking in the list-view control. Hot tracking means that when the cursor moves over an item, it is highlighted but not selected."
0x00000080, "LVS_EX_TWOCLICKACTIVATE", true,  0, 0,              "The list-view control sends an LVN_ITEMACTIVATE notification code to the parent window when the user double-clicks an item. This style also enables hot tracking in the list-view control. Hot tracking means that when the cursor moves over an item, it is highlighted but not selected."
0x00000100, "LVS_EX_FLATSB",           true,  0, 0,              "Enables flat scroll bars in the list view. If you need more control over the appearance of the list view's scroll bars, you should manipulate the list view's scroll bars directly using the Flat Scroll Bar APIs. If the system metrics change, you are responsible for adjusting the scroll bar metrics with FlatSB_SetScrollProp. See Flat Scroll Bars for further details."
0x00000200, "LVS_EX_REGIONAL",         true,  0, 0,              "Version 4.71 through Version 5.80 only. Not supported on Windows Vista. Sets the list view window region to include only the item icons and text using SetWindowRgn. Any area that is not part of an item is excluded from the window region. This style is only available to list-view controls that use the LVS_ICON style."
0x00000400, "LVS_EX_INFOTIP",          true,  0, 0,              "When a list-view control uses the LVS_EX_INFOTIP style, the LVN_GETINFOTIP notification code is sent to the parent window before displaying an item's tooltip."
0x00000800, "LVS_EX_UNDERLINEHOT",     true,  0, 0,              "Causes those hot items that may be activated to be displayed with underlined text. This style requires that LVS_EX_ONECLICKACTIVATE or LVS_EX_TWOCLICKACTIVATE also be set."
0x00001000, "LVS_EX_UNDERLINECOLD",    true,  0, 0,              "Causes those non-hot items that may be activated to be displayed with underlined text. This style requires that LVS_EX_TWOCLICKACTIVATE be set also."
0x00002000, "LVS_EX_MULTIWORKAREAS",   true,  0, 0,              "If the list-view control has the LVS_AUTOARRANGE style, the control will not autoarrange its icons until one or more work areas are defined (see LVM_SETWORKAREAS). To be effective, this style must be set before any work areas are defined and any items have been added to the control."
0x00004000, "LVS_EX_LABELTIP",         true,  0, 0,              "If a partially hidden label in any list view mode lacks tooltip text, the list-view control will unfold the label. If this style is not set, the list-view control will unfold partly hidden labels only for the large icon mode."
0x00008000, "LVS_EX_BORDERSELECT",     true,  0, 0,              "Changes border color when an item is selected, instead of highlighting the item."
0x00010000, "LVS_EX_DOUBLEBUFFER",     true,  0, 0,              "Paints via double-buffering, which reduces flicker. This extended style also enables alpha-blended marquee selection on systems where it is supported."
0x00020000, "LVS_EX_HIDELABELS",       true,  0, 0,              "Hides the labels in icon and small icon view."
0x00040000, "LVS_EX_SINGLEROW",        true,  0, 0,              "Not used."
0x00080000, "LVS_EX_SNAPTOGRID",       true,  0, 0,              "In icon view, icons automatically snap into a grid."
0x00100000, "LVS_EX_SIMPLESELECT",     true,  0, 0,              "In icon view, moves the state image of the control to the top right of the large icon rendering. In views other than icon view there is no change. When the user changes the state by using the space bar, all selected items cycle over, not the item with the focus."
0x00200000, "LVS_EX_JUSTIFYCOLUMNS",   true,  0, 0,              "Windows Vista. Icons are lined up in columns that use up the whole view."
0x00400000, "LVS_EX_TRANSPARENTBKGND", true,  0, 0,              "Windows Vista. Background is painted by the parent via WM_PRINTCLIENT."
0x00800000, "LVS_EX_TRANSPARENTSHADOWTEXT", true,  0, 0,         "Windows Vista. Enable shadow text on transparent backgrounds only."
0x01000000, "LVS_EX_AUTOAUTOARRANGE",  true,  0, 0,              "Windows Vista. Automatically arrange icons if no icon positions have been set (Similar to LVS_AUTOARRANGE)."
0x02000000, "LVS_EX_HEADERINALLVIEWS", true,  0, 0,              "Windows Vista. Show column headers in all view modes."
0x08000000, "LVS_EX_AUTOCHECKSELECT",  true,  0, 0,              "Windows Vista. Automatically select check boxes on single click."
0x10000000, "LVS_EX_AUTOSIZECOLUMNS",  true,  0, 0,              "Windows Vista. Automatically size listview columns."
0x40000000, "LVS_EX_COLUMNSNAPPOINTS", true,  0, 0,              "Windows Vista. Snap to minimum column width when the user resizes a column."
0x80000000, "LVS_EX_COLUMNOVERFLOW",   true,  0, 0,              "Indicates that an overflow button should be displayed in icon/tile view if there is not enough client width to display the complete set of header items. The list-view control sends the LVN_COLUMNOVERFLOWCLICK notification when the overflow button is clicked. This flag is only valid when LVS_EX_HEADERINALLVIEWS is also specified."


// TreeView styles
[SysTreeView32]
0x00000001, "TVS_HASBUTTONS",          false, 0, 0,              "Displays plus (+) and minus (-) buttons next to parent items. The user clicks the buttons to expand or collapse a parent item's list of child items. To include buttons with items at the root of the tree view, TVS_LINESATROOT must also be specified."
0x00000002, "TVS_HASLINES",            false, 0, 0,              "Uses lines to show the hierarchy of items."
0x00000004, "TVS_LINESATROOT",         false, 0, 0,              "Uses lines to link items at the root of the tree-view control. This value is ignored if TVS_HASLINES is not also specified."
0x00000008, "TVS_EDITLABELS",          false, 0, 0,              "Allows the user to edit the labels of tree-view items."
0x00000010, "TVS_DISABLEDRAGDROP",     false, 0, 0,              "Prevents the tree-view control from sending TVN_BEGINDRAG notification codes."
0x00000020, "TVS_SHOWSELALWAYS",       false, 0, 0,              "Causes a selected item to remain selected when the tree-view control loses focus."
0x00000040, "TVS_RTLREADING",          false, 0, 0,              "Causes text to be displayed from right-to-left (RTL). Usually, windows display text left-to-right (LTR). Windows can be mirrored to display languages such as Hebrew or Arabic that read RTL. Typically, tree-view text is displayed in the same direction as the text in its parent window. If TVS_RTLREADING is set, tree-view text reads in the opposite direction from the text in the parent window."
0x00000080, "TVS_NOTOOLTIPS",          false, 0, 0,              "Disables tooltips."
0x00000100, "TVS_CHECKBOXES",          false, 0, 0,              "Version 4.70. Enables check boxes for items in a tree-view control. A check box is displayed only if an image is associated with the item. When set to this style, the control effectively uses DrawFrameControl to create and set a state image list containing two images. State image 1 is the unchecked box and state image 2 is the checked box. Setting the state image to zero removes the check box altogether.\n\nVersion 5.80. Displays a check box even if no image is associated with the item.\n\nOnce a tree-view control is created with this style, the style cannot be removed. Instead, you must destroy the control and create a new one in its place. Destroying the tree-view control does not destroy the check box state image list. You must destroy it explicitly. Get the handle to the state image list by sending the tree-view control a TVM_GETIMAGELIST message. Then destroy the image list with ImageList_Destroy.\n\nIf you want to use this style, you must set the TVS_CHECKBOXES style with SetWindowLong after you create the treeview control, and before you populate the tree. Otherwise, the checkboxes might appear unchecked, depending on timing issues."
0x00000200, "TVS_TRACKSELECT",         false, 0, 0,              "Enables hot tracking in a tree-view control."
0x00000400, "TVS_SINGLEEXPAND",        false, 0, 0,              "Version 4.71. Causes the item being selected to expand and the item being unselected to collapse upon selection in the tree view. If the mouse is used to single-click the selected item and that item is closed, it will be expanded. If the user holds down the CTRL key while selecting an item, the item being unselected will not be collapsed.\n\nVersion 5.80. Causes the item being selected to expand and the item being unselected to collapse upon selection in the tree view. If the user holds down the CTRL key while selecting an item, the item being unselected will not be collapsed."
0x00000800, "TVS_INFOTIP",             false, 0, 0,              "Obtains tooltip information by sending the TVN_GETINFOTIP notification."
0x00001000, "TVS_FULLROWSELECT",       false, 0, 0,              "Enables full-row selection in the tree view. The entire row of the selected item is highlighted, and clicking anywhere on an item's row causes it to be selected. This style cannot be used in conjunction with the TVS_HASLINES style."
0x00002000, "TVS_NOSCROLL",            false, 0, 0,              "Disables both horizontal and vertical scrolling in the control. The control will not display any scroll bars."
0x00004000, "TVS_NONEVENHEIGHT",       false, 0, 0,              "Sets the height of the items to an odd height with the TVM_SETITEMHEIGHT message. By default, the height of items must be an even value."
0x00008000, "TVS_NOHSCROLL",           false, 0, 0,              "Disables horizontal scrolling in the control. The control will not display any horizontal scroll bars."


// Scrollbar styles
[ScrollBar]
0x00000000, "SBS_HORZ",                    false, 0, 0x00000019, "Designates a horizontal scroll bar. If neither the SBS_BOTTOMALIGN nor SBS_TOPALIGN style is specified, the scroll bar has the height, width, and position specified by the x, y, nWidth, and nHeight parameters of CreateWindowEx."
0x00000002, "SBS_TOPALIGN",                false, 0, 0,          "Aligns the top edge of the scroll bar with the top edge of the rectangle defined by the x, y, nWidth, and nHeight parameters of CreateWindowEx. The scroll bar has the default height for system scroll bars. Use this style with the SBS_HORZ style."
0x00000002, "SBS_LEFTALIGN",               false, 0x00000001, 0, "Aligns the left edge of the scroll bar with the left edge of the rectangle defined by the x, y, nWidth, and nHeight parameters of CreateWindowEx. The scroll bar has the default width for system scroll bars. Use this style with the SBS_VERT style."
0x00000004, "SBS_BOTTOMALIGN",             false, 0x00000018, 0, "Aligns the bottom edge of the scroll bar with the bottom edge of the rectangle defined by the x, y, nWidth, and nHeight parameters of CreateWindowEx function. The scroll bar has the default height for system scroll bars. Use this style with the SBS_HORZ style."
0x00000004, "SBS_RIGHTALIGN",              false, 0x00000019, 0, "Aligns the right edge of the scroll bar with the right edge of the rectangle defined by the x, y, nWidth, and nHeight parameters of CreateWindowEx. The scroll bar has the default width for system scroll bars. Use this style with the SBS_VERT style."
0x00000001, "SBS_VERT",                    false, 0, 0x00000018, "Designates a vertical scroll bar. If you specify neither the SBS_RIGHTALIGN nor the SBS_LEFTALIGN style, the scroll bar has the height, width, and position specified by the x, y, nWidth, and nHeight parameters of CreateWindowEx."
0x00000002, "SBS_SIZEBOXTOPLEFTALIGN",     false, 0x00000018, 0, "Aligns the upper left corner of the size box with the upper left corner of the rectangle specified by the x, y, nWidth, and nHeight parameters of CreateWindowEx. The size box has the default size for system size boxes. Use this style with the SBS_SIZEBOX style."
0x00000004, "SBS_SIZEBOXBOTTOMRIGHTALIGN", false, 0x00000018, 0, "Aligns the lower right corner of the size box with the lower right corner of the rectangle specified by the x, y, nWidth, and nHeight parameters of CreateWindowEx. The size box has the default size for system size boxes. Use this style with the SBS_SIZEBOX style."
0x00000008, "SBS_SIZEBOX",                 false, 0, 0,          "Designates a size box. If you specify neither the SBS_SIZEBOXBOTTOMRIGHTALIGN nor the SBS_SIZEBOXTOPLEFTALIGN style, the size box has the height, width, and position specified by the x, y, nWidth, and nHeight parameters of CreateWindowEx."
0x00000010, "SBS_SIZEGRIP",                false, 0, 0,          "Same as SBS_SIZEBOX, but with a raised edge."


// Statusbar styles
[msctls_statusbar32]
0x00000100, "SBARS_SIZEGRIP",          false, 0, 0,              ""
0x00000800, "SBARS_TOOLTIPS",          false, 0, 0,              ""


// Toolbar styles
[ToolbarWindow32]
0x00000100, "TBSTYLE_TOOLTIPS",        false, 0, 0,              ""
0x00000200, "TBSTYLE_WRAPABLE",        false, 0, 0,              ""
0x00000400, "TBSTYLE_ALTDRAG",         false, 0, 0,              ""
0x00000800, "TBSTYLE_FLAT",            false, 0, 0,              ""
0x00001000, "TBSTYLE_LIST",            false, 0, 0,              ""
0x00002000, "TBSTYLE_CUSTOMERASE",     false, 0, 0,              ""
0x00004000, "TBSTYLE_REGISTERDROP",    false, 0, 0,              ""
0x00008000, "TBSTYLE_TRANSPARENT",     false, 0, 0,              ""

// Toolbar extended styles
0x00000001, "TBSTYLE_EX_DRAWDDARROWS",       true, 0, 0,        ""
0x00000008, "TBSTYLE_EX_MIXEDBUTTONS",       true, 0, 0,        ""
0x00000010, "TBSTYLE_EX_HIDECLIPPEDBUTTONS", true, 0, 0,        ""


// Rebar styles
[ReBarWindow32]
0x00000100, "RBS_TOOLTIPS",            false, 0, 0,              ""
0x00000200, "RBS_VARHEIGHT",           false, 0, 0,              ""
0x00000400, "RBS_BANDBORDERS",         false, 0, 0,              ""
0x00000800, "RBS_FIXEDORDER",          false, 0, 0,              ""
0x00001000, "RBS_REGISTERDROP",        false, 0, 0,              ""
0x00002000, "RBS_AUTOSIZE",            false, 0, 0,              ""
0x00004000, "RBS_VERTICALGRIPPER",     false, 0, 0,              ""
0x00008000, "RBS_DBLCLKTOGGLE",        false, 0, 0,              ""


// Header styles
[SysHeader32]
0x00000000, "HDS_HORZ",                false, 0, 0x00000010,     "Creates a horizontal header control."
0x00000002, "HDS_BUTTONS",             false, 0, 0,              "Causes each header item to look and behave like a button. This style is useful if an application carries out a task when the user clicks an item in the header control."
0x00000004, "HDS_HOTTRACK",            false, 0, 0,              ""
0x00000040, "HDS_DRAGDROP",            false, 0, 0,              "Enables drag-and-drop reordering of header items."
0x00000080, "HDS_FULLDRAG",            false, 0, 0,              "Causes the header control to display column contents even while a user resizes a column."
0x00000008, "HDS_HIDDEN",              false, 0, 0,              "Creates a header control that you can hide by setting its height to zero. This style is useful when you use the control as an information container instead of a visual control."
0x00000100, "HDS_FILTERBAR",           false, 0, 0,              ""


// Standard Common Controls styles
[msctls_statusbar32,ToolbarWindow32,ReBarWindow32,SysHeader32]
0x00000001, "CCS_TOP",                 false, 0, 0,              "Causes the control to position itself at the top of the parent window client area and matches the width of the control to the width of the parent window. Toolbars have this style by default."
0x00000002, "CCS_NOMOVEY",             false, 0, 0,              "Causes the control to resize and move itself horizontally, but not vertically, in response to a WM_SIZE message. Header windows have this style by default. This style does not apply if your control has the CCS_NORESIZE style."
0x00000003, "CCS_BOTTOM",              false, 0, 0,              "Causes the control to position itself at the bottom of the parent window's client area and sets the width of the control to be the same as the parent window's width. Status windows have this style by default."
0x00000004, "CCS_NORESIZE",            false, 0, 0,              "Prevents the control from using the default width and height when setting its initial size or a new size. Instead, the control uses the width and height that is specified in the request for creation or sizing."
0x00000008, "CCS_NOPARENTALIGN",       false, 0, 0,              "Prevents the control from automatically moving to the top or bottom of the parent window. Instead, the control keeps its position within the parent window despite changes to the size of the parent. If the application also uses the CCS_TOP or CCS_BOTTOM styles, it adjusts the height to the default, but does not change the position and width of the control."
0x00000020, "CCS_ADJUSTABLE",          false, 0, 0,              "Not supported."
0x00000040, "CCS_NODIVIDER",           false, 0, 0,              "Prevents a 2-pixel highlight from being drawn at the top of the control."
0x00000080, "CCS_VERT",                false, 0, 0,              "Causes the control to display vertically."


// Hyperlink control styles
[SysLink]
0x00000001, "LWS_TRANSPARENT",         false, 0, 0,              "The background mix mode is transparent."
0x00000002, "LWS_IGNORERETURN",        false, 0, 0,              "When the link has keyboard focus and the user presses Enter, the keystroke is ignored by the control and passed to the host dialog box."
0x00000004, "LWS_NOPREFIX",            false, 0, 0,              "Windows Vista. If the text contains an ampersand, it is treated as a literal character rather than the prefix to a shortcut key."
0x00000008, "LWS_USEVISUALSTYLE",      false, 0, 0,              "Windows Vista. The link is displayed in the current visual style."
0x00000010, "LWS_USECUSTOMTEXT",       false, 0, 0,              "Windows Vista. An NM_CUSTOMTEXT notification is sent when the control is drawn, so that the application can supply text dynamically."
0x00000020, "LWS_RIGHT",               false, 0, 0,              "Windows Vista. The text is right-justified."


// Track Bar (slider) styles
[msctls_trackbar32]
0x00000000, "TBS_HORZ",                false, 0, 0x00000002,     ""
0x00000000, "TBS_BOTTOM",              false, 0, 0x00000004,     ""
0x00000000, "TBS_RIGHT",               false, 0, 0x00000004,     ""
0x00000001, "TBS_AUTOTICKS",           false, 0, 0,              ""
0x00000002, "TBS_VERT",                false, 0, 0,              ""
0x00000004, "TBS_TOP",                 false, 0, 0,              ""
0x00000004, "TBS_LEFT",                false, 0, 0,              ""
0x00000008, "TBS_BOTH",                false, 0, 0,              ""
0x00000010, "TBS_NOTICKS",             false, 0, 0,              ""
0x00000020, "TBS_ENABLESELRANGE",      false, 0, 0,              ""
0x00000040, "TBS_FIXEDLENGTH",         false, 0, 0,              ""
0x00000080, "TBS_NOTHUMB",             false, 0, 0,              ""
0x00000100, "TBS_TOOLTIPS",            false, 0, 0,              ""
0x00000200, "TBS_REVERSED",            false, 0, 0,              ""


// Tooltip styles
[tooltips_class32]
0x00000001, "TTS_ALWAYSTIP",           false, 0, 0,              ""
0x00000002, "TTS_NOPREFIX",            false, 0, 0,              ""
0x00000010, "TTS_NOANIMATE",           false, 0, 0,              ""
0x00000020, "TTS_NOFADE",              false, 0, 0,              ""
0x00000040, "TTS_BALLOON",             false, 0, 0,              ""


// UpDown styles
[msctls_updown32]
0x00000001, "UDS_WRAP",                false, 0, 0,              ""
0x00000002, "UDS_SETBUDDYINT",         false, 0, 0,              ""
0x00000004, "UDS_ALIGNRIGHT",          false, 0, 0,              ""
0x00000008, "UDS_ALIGNLEFT",           false, 0, 0,              ""
0x00000010, "UDS_AUTOBUDDY",           false, 0, 0,              ""
0x00000020, "UDS_ARROWKEYS",           false, 0, 0,              ""
0x00000040, "UDS_HORZ",                false, 0, 0,              ""
0x00000080, "UDS_NOTHOUSANDS",         false, 0, 0,              ""
0x00000100, "UDS_HOTTRACK",            false, 0, 0,              ""


// Progress bar styles
[msctls_progress32]
0x00000001, "PBS_SMOOTH",              false, 0, 0,              "CommCtrl Version 4.70 or later. The progress bar displays progress status in a smooth scrolling bar instead of the default segmented bar.\n\nNote: This style is supported only in the Windows Classic theme. All other themes override this style."
0x00000004, "PBS_VERTICAL",            false, 0, 0,              "CommCtrl Version 4.70 or later. The progress bar displays progress status vertically, from bottom to top."
0x00000008, "PBS_MARQUEE",             false, 0, 0,              "CommCtrl Version 6.0 or later. The progress indicator does not grow in size but instead moves repeatedly along the length of the bar, indicating activity without specifying what proportion of the progress is complete."
0x00000010, "PBS_SMOOTHREVERSE",       false, 0, 0,              "CommCtrl Version 6.0 or later and Windows Vista. Determines the animation behavior that the progress bar should use when moving backward (from a higher value to a lower value). If this is set, then a 'smooth' transition will occur, otherwise the control will 'jump' to the lower value."


// Tab control styles
[SysTabControl32]
0x00000000, "TCS_SINGLELINE",          false, 0, 0x00000200,     "Only one row of tabs is displayed. The user can scroll to see more tabs, if necessary. This style is the default."
0x00000000, "TCS_TABS",                false, 0, 0x00000100,     "Tabs appear as tabs, and a border is drawn around the display area. This style is the default."
0x00000000, "TCS_RIGHTJUSTIFY",        false, 0, 0,              "The width of each tab is increased, if necessary, so that each row of tabs fills the entire width of the tab control. This window style is ignored unless the TCS_MULTILINE style is also specified."
0x00000001, "TCS_SCROLLOPPOSITE",      false, 0, 0,              "Unneeded tabs scroll to the opposite side of the control when a tab is selected."
0x00000002, "TCS_BOTTOM",              false, 0x00000080, 0,     "Tabs appear at the bottom of the control. This value equals TCS_RIGHT. This style is not supported if you use ComCtl32.dll version 6."
0x00000002, "TCS_RIGHT",               false, 0, 0x00000080,     "Tabs appear vertically on the right side of controls that use the TCS_VERTICAL style. This value equals TCS_BOTTOM. This style is not supported if you use visual styles."
0x00000004, "TCS_MULTISELECT",         false, 0, 0,              "Multiple tabs can be selected by holding down the CTRL key when clicking. This style must be used with the TCS_BUTTONS style."
0x00000008, "TCS_FLATBUTTONS",         false, 0, 0,              "Selected tabs appear as being indented into the background while other tabs appear as being on the same plane as the background. This style only affects tab controls with the TCS_BUTTONS style."
0x00000010, "TCS_FORCEICONLEFT",       false, 0, 0,              "Icons are aligned with the left edge of each fixed-width tab. This style can only be used with the TCS_FIXEDWIDTH style."
0x00000020, "TCS_FORCELABELLEFT",      false, 0, 0,              "Labels are aligned with the left edge of each fixed-width tab; that is, the label is displayed immediately to the right of the icon instead of being centered. This style can only be used with the TCS_FIXEDWIDTH style, and it implies the TCS_FORCEICONLEFT style."
0x00000040, "TCS_HOTTRACK",            false, 0, 0,              "Items under the pointer are automatically highlighted. You can check whether hot tracking is enabled by calling SystemParametersInfo."
0x00000080, "TCS_VERTICAL",            false, 0, 0,              "Tabs appear at the left side of the control, with tab text displayed vertically. This style is valid only when used with the TCS_MULTILINE style. To make tabs appear on the right side of the control, also use the TCS_RIGHT style. This style is not supported if you use ComCtl32.dll version 6."
0x00000100, "TCS_BUTTONS",             false, 0, 0,              "Tabs appear as buttons, and no border is drawn around the display area."
0x00000200, "TCS_MULTILINE",           false, 0, 0,              "Multiple rows of tabs are displayed, if necessary, so all tabs are visible at once."
0x00000400, "TCS_FIXEDWIDTH",          false, 0, 0,              "All tabs are the same width. This style cannot be combined with the TCS_RIGHTJUSTIFY style."
0x00000800, "TCS_RAGGEDRIGHT",         false, 0, 0,              "Rows of tabs will not be stretched to fill the entire width of the control. This style is the default."
0x00001000, "TCS_FOCUSONBUTTONDOWN",   false, 0, 0,              "The tab control receives the input focus when clicked."
0x00002000, "TCS_OWNERDRAWFIXED",      false, 0, 0,              "The parent window is responsible for drawing tabs."
0x00004000, "TCS_TOOLTIPS",            false, 0, 0,              "The tab control has a tooltip control associated with it."
0x00008000, "TCS_FOCUSNEVER",          false, 0, 0,              "The tab control does not receive the input focus when clicked."

// Tab control extended styles
0x00000001, "TCS_EX_FLATSEPARATORS",   true,  0, 0,              ""
0x00000002, "TCS_EX_REGISTERDROP",     true,  0, 0,              ""


// Animation control styles
[SysAnimate32]
0x00000001, "ACS_CENTER",              false, 0, 0,              ""
0x00000002, "ACS_TRANSPARENT",         false, 0, 0,              ""
0x00000004, "ACS_AUTOPLAY",            false, 0, 0,              ""
0x00000008, "ACS_TIMER",               false, 0, 0,              ""


// Month-calendar styles
[SysMonthCal32]
0x00000001, "MCS_DAYSTATE",            false, 0, 0,              ""
0x00000002, "MCS_MULTISELECT",         false, 0, 0,              ""
0x00000004, "MCS_WEEKNUMBERS",         false, 0, 0,              ""
0x00000008, "MCS_NOTODAYCIRCLE",       false, 0, 0,              ""
0x00000010, "MCS_NOTODAY",             false, 0, 0,              ""


// Date-Time picker styles
[SysDateTimePick32]
0x00000000, "DTS_SHORTDATEFORMAT",        false, 0, 0x00000004,  "Displays the date in short format. The default format string for this style is defined by LOCALE_SSHORTDATE, which produces output like '4/19/96'."
0x00000001, "DTS_UPDOWN",                 false, 0, 0,           "Places an up-down control to the right of the DTP control to modify date-time values. This style can be used in place of the drop-down month calendar, which is the default style."
0x00000002, "DTS_SHOWNONE",               false, 0, 0,           "It is possible to have no date currently selected in the control. With this style, the control displays a check box that is automatically selected whenever a date is picked or entered. If the check box is subsequently deselected, the application cannot retrieve the date from the control because, in essence, the control has no date. The state of the check box can be set with the DTM_SETSYSTEMTIME message or queried with the DTM_GETSYSTEMTIME message."
0x00000004, "DTS_LONGDATEFORMAT",         false, 0, 0,           "Displays the date in long format. The default format string for this style is defined by LOCALE_SLONGDATEFORMAT, which produces output like 'Friday, April 19, 1996'. When this style is used, the dropdown button does not display an icon."
0x0000000C, "DTS_SHORTDATECENTURYFORMAT", false, 0, 0,           "Similar to the DTS_SHORTDATEFORMAT style, except the year is a four-digit field. The default format string for this style is based on LOCALE_SSHORTDATE. The output looks like: '4/19/1996'."
0x00000009, "DTS_TIMEFORMAT",             false, 0, 0,           "Displays the time. The default format string for this style is defined by LOCALE_STIMEFORMAT, which produces output like '5:31:42 PM'."
0x00000010, "DTS_APPCANPARSE",            false, 0, 0,           "Allows the owner to parse user input and take necessary action. It enables users to edit within the client area of the control when they press the F2 key. The control sends DTN_USERSTRING notification codes when users are finished."
0x00000020, "DTS_RIGHTALIGN",             false, 0, 0,           "The drop-down month calendar will be right-aligned with the control instead of left-aligned, which is the default."


// Pager control styles
[SysPager]
0x00000000, "PGS_VERT",                false, 0, 0x00000001,     ""
0x00000001, "PGS_HORZ",                false, 0, 0,              ""
0x00000002, "PGS_AUTOSCROLL",          false, 0, 0,              ""
0x00000004, "PGS_DRAGNDROP",           false, 0, 0,              ""
